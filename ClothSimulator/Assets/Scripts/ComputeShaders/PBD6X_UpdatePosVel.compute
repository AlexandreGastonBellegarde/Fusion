


// data structure of Particles/Vertices
struct PointElement {
	// TODO: change the Point Element structure when needed
	float3 worldPosition;
	float3 worldVelocity;
	float invMass;
};


// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

//RWTexture2D<float4> Result;

RWStructuredBuffer<PointElement> pointElements;
StructuredBuffer<PointElement> pointElements_Old;

int numVertices;
float deltaTime;

#pragma kernel UpdatePosVel
[numthreads(8, 1, 1)]
void UpdatePosVel(uint3 id : SV_DispatchThreadID)
{
	if (id.x >= numVertices)return;
	pointElements[id.x].worldVelocity = (pointElements[id.x].worldPosition - pointElements_Old[id.x].worldPosition) / deltaTime;
}