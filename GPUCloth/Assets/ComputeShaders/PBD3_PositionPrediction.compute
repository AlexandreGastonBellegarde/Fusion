// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel PredictPosition

// data structure of Particles/Vertices
struct PointElement {
	// TODO: change the Point Element structure when needed
	float3 worldPosition;
	float3 worldVelocity;
	float invMass;
};


// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

//RWTexture2D<float4> Result;

RWStructuredBuffer<PointElement> pointElements;

float deltaTime;
int numVertices;

[numthreads(8, 1, 1)]
void PredictPosition(uint3 id : SV_DispatchThreadID)
{
	if (id.x >= numVertices)return;
	// read current particles from buffer
	// change position according to damped velocity

	pointElements[id.x].worldPosition = pointElements[id.x].worldVelocity * deltaTime;

}
